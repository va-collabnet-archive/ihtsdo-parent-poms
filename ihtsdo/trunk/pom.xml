<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.ihtsdo</groupId>
  <artifactId>ihtsdo</artifactId>
  <packaging>pom</packaging>
  <version>1-SNAPSHOT</version>
  <name>IHTSDO Organizational POM</name>
  <description>
    International Health Terminology Standards Development Organisation (IHTSDO) is a not-for-profit association that
    develops and promotes use of SNOMED CT to support safe and effective health information exchange. SNOMED CT is a
    clinical terminology and is considered to be the most comprehensive, multilingual healthcare terminology in the
    world.
  </description>
  <organization>
    <name>International Health Terminology Standards Development Organisation</name>
    <url>http://www.ihtsdo.org</url>
  </organization>
  <!-- Stored in the Workbench SVN so that all Maven related material can be kept together -->
  <scm>
    <connection>scm:svn:https://csfe.aceworkspace.net/svn/repos/workbench/pom/ihtsdo/trunk</connection>
    <developerConnection>scm:svn:https://csfe.aceworkspace.net/svn/repos/workbench/pom/ihtsdo/trunk</developerConnection>
    <url>https://csfe.aceworkspace.net/integration/viewvc/viewvc.cgi/pom/ihtsdo/trunk/?root=workbench&amp;system=exsy1002</url>
  </scm>
  <ciManagement>
    <system>Continuum</system>
    <url>https://mgr.servers.aceworkspace.net/apps/maestro_ihtsdo/continuum/groupSummary.action</url>
  </ciManagement>
  <!--
    deploy this POM to the workbench repositories so it is accessible to all. "Private" subprojects should redefine it
    -->
  <distributionManagement>
    <snapshotRepository>
      <id>maestro_ihtsdo.wb-snapshots</id>
      <name>IHTSDO Snapshots Repository</name>
      <url>${maestro_ihtsdo.wb-snapshots.url}</url>
    </snapshotRepository>
    <repository>
      <id>maestro_ihtsdo.wb-releases</id>
      <name>IHTSDO Releases Repository</name>
      <url>${maestro_ihtsdo.wb-releases.url}</url>
    </repository>
  </distributionManagement>
  <!--
    Reconfigure the central repository definitions, which will be directed by settings.xml to IHTSDO.
    These definitions enable the retrieval of snapshots by default, and turn on checksum enforcement for downloads.
    Other projects should have no need to introduce their own repositories - instead, they can be controlled by their
    respective Archiva installation.
  -->
  <pluginRepositories>
    <pluginRepository>
      <id>central</id>
      <url>http://mgr.servers.aceworkspace.net/apps/maestro_ihtsdo/archiva/repository/all/</url>
      <snapshots>
        <enabled>true</enabled>
        <checksumPolicy>fail</checksumPolicy>
        <!-- Currently daily is the default - but this may be reconsidered
        <updatePolicy>never</updatePolicy>
        -->
      </snapshots>
      <releases>
        <enabled>true</enabled>
        <checksumPolicy>fail</checksumPolicy>
      </releases>
    </pluginRepository>
  </pluginRepositories>
  <repositories>
    <repository>
      <id>central</id>
      <url>http://mgr.servers.aceworkspace.net/apps/maestro_ihtsdo/archiva/repository/all/</url>
      <snapshots>
        <enabled>true</enabled>
        <checksumPolicy>fail</checksumPolicy>
        <!-- Currently daily is the default - but this may be reconsidered
        <updatePolicy>never</updatePolicy>
        -->
      </snapshots>
      <releases>
        <enabled>true</enabled>
        <checksumPolicy>fail</checksumPolicy>
      </releases>
    </repository>
  </repositories>
  <properties>
    <organization.logo>http://www.ihtsdo.org/fileadmin/templates/logohead.png</organization.logo>
    <!-- use properties for URLs so that they can be easily substituted or reused in child POMs -->
    <maestro_ihtsdo.wb-snapshots.url>http://mgr.servers.aceworkspace.net/apps/maestro_ihtsdo/archiva/repository/wb-snapshots/</maestro_ihtsdo.wb-snapshots.url>
    <maestro_ihtsdo.wb-releases.url>http://mgr.servers.aceworkspace.net/apps/maestro_ihtsdo/archiva/repository/wb-releases/</maestro_ihtsdo.wb-releases.url>
  </properties>
  <build>
    <pluginManagement>
      <plugins>
        <!-- endorsed plugin versions -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.4.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.0.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.4.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.5</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.3.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.5</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.0</version>
          <configuration>
            <preparationGoals>clean validate</preparationGoals>
            <autoVersionSubmodules>true</autoVersionSubmodules>
            <remoteTagging>true</remoteTagging>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>2.0-beta-7</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.0-beta-1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.2-beta-2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.3</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.5</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.1.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.5</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.0.4</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requirePluginVersions>
                  <message>Best Practice is to always define plugin versions!</message>
                  <banLatest>true</banLatest>
                  <banRelease>true</banRelease>
                  <!--
                  Currently allow snapshot plugins across the board. If you choose to disable them, you may need to
                  turn on the setting to allow snapshots for the Workbench Mojos below
                  -->
                  <banSnapshots>false</banSnapshots>
                </requirePluginVersions>
                <!--
                <unCheckedPluginsList>org.ihtsdo:wb-mojo,org.ihtsdo:wb-bdb-mojo</unCheckedPluginsList>
                -->

                <!-- add to this list as needed for artifacts taken out of service -->
                <bannedDependencies>
                  <excludes>
                    <exclude>org.dwfa:ace-*</exclude>
                    <exclude>org.dwfa:wb-*</exclude>
                  </excludes>
                </bannedDependencies>
                <evaluateBeanshell>
                  <condition>
                    "${project.licenses[0]}" != "null" || "${project.artifactId}" == "ihtsdo"
                  </condition>
                  <message>
                    You must specify a License in the POM or one of its parents
                  </message>
                </evaluateBeanshell>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>

